\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax 
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {2.1}{\ignorespaces Characteristics of benzene stack systems. $N$ and $N_{aux}$ refer to the number of primary and auxiliary basis functions, respectively. Mask sparsity refers to the percentage of significant AO function pairs in the sparsity mask. Mask sparsity increases with additional benzenes added to the stack.\relax }}{11}{table.caption.5}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {2.2}{\ignorespaces Speedups obtained from sparsity screening at ten benzenes from data in Figure 2.2.\relax }}{12}{table.caption.7}
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {3.1}{\ignorespaces Total memory required for sparse three-index AO integrals for adenine-thymine dimer across various basis sets. The JK type auxiliary basis sets were used.\relax }}{14}{table.caption.8}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {3.2}{\ignorespaces Speedups obtainable via pre-transforming the 3-center integrals prior to metric contraction for common occupied-virtual transformations. $N_{AO}$ and $N_i$ denote the number of atomic orbitals and occupied molecular orbitals, respectively. \relax }}{20}{table.caption.9}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {3.3}{\ignorespaces Characteristics of organoboron catalyst. $N_{AO}$ and $N_{aux}$ refer to the number of primary and auxiliary basis functions, respectively. Mask sparsity refers to the percentage of significant AO function pairs in the sparsity mask.\relax }}{23}{table.caption.11}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {3.4}{\ignorespaces Characteristics of organoboron catalyst systems across the cc-pVDZ, cc-pVTZ, and cc-pVQZ basis sets.\relax }}{27}{table.caption.13}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {3.5}{\ignorespaces Characteristics of systems for Store vs Direct algorithm comparisons.\relax }}{29}{table.caption.16}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {3.6}{\ignorespaces Computational times comparing the Direct and Store algorithms for three-index integral construction and transformations.\relax }}{30}{table.caption.17}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {3.7}{\ignorespaces Total procedure wall clock times comparing the Direct and Store algorithms.\relax }}{30}{table.caption.18}
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {4.1}{\ignorespaces Total execution times for Self-Consistent Field procedures for various systems using Algorithms 10 and 11 and Algorithms 13 and 14 for exchange and Coulomb matrix evaluations, respectively. Total wall times include wall time for the entire program to execute. J and K compute time indicates the total time spent in the Coulomb and exchange matrix evaluation kernels, respectively. System descriptions including number of AO basis functions, $N_{AO}$, number of auxiliary basis functions, $N_{aux}$, basis, and number of atoms, $N_{at.}$, are included. All rows are sorted by the product $N_{aux}N_{AO}$. A speedup column is included for total wall time and is calculated as the total procedure time spent using Algorithms 11 and 14 dived by the total procedure time spent using Algorithms 10 and 13. The experiments were carried out using one node consisting of an Intel Core i7-5930K processor (6 cores at 3.50GHz) and 64GB DRAM \relax }}{39}{table.caption.19}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {4.2}{\ignorespaces Total execution times for Self-Consistent Field procedures for various systems using Algorithms 10 and 11 and Algorithms 13 and 14 for exchange and Coulomb matrix evaluations, respectively. Total wall times include wall time for the entire program to execute. J and K compute time indicates the total time spent in the Coulomb and exchange matrix evaluation kernels, respectively. System descriptions including number of AO basis functions, $N_{AO}$, number of auxiliary basis functions, $N_{aux}$, basis, and number of atoms, $N_{at.}$, are included. All rows are sorted by the product $N_{aux}N_{AO}$. A speedup column is included for total wall time and is calculated as the total procedure time spent using Algorithms 11 and 14 dived by the total procedure time spent using Algorithms 10 and 13. The experiments were carried out using one node consisting of two Intel Xeon E5-2640 processors (10 cores at 2.40GHz) and 256GB DRAM. \relax }}{40}{table.caption.20}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {4.3}{\ignorespaces Total procedure execution times for a Self-Consistent Field procedure using both Algorithms 10 and 13 and Algorithms 11 and 14 for exchange and Coloumb matrix evaluations, respectively. The programs were executed on one Knights Landing processor using a development version of {\sc Psi4}. A relative speedup is listed.\relax }}{42}{table.caption.21}
\defcounter {refsection}{0}\relax 
\contentsline {table}{\numberline {4.4}{\ignorespaces Total exchange matrix evaluation times within an Self-Consistent Field procedure using both Algorithms 10 and 11. The programs were executed on one Knights Landing processor using a development version of {\sc Psi4}. A relative speedup is listed.\relax }}{43}{table.caption.22}
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
