\relax 
\providecommand\hyper@newdestlabel[2]{}
\bibstyle{biblatex}
\bibdata{thesis-blx,references}
\citation{biblatex-control}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lof}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lot}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{Acknowledgments}{v}{Doc-Start}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{List of Tables}{viii}{chapter*.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{List of Figures}{x}{chapter*.2}}
\citation{ref1}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction and Background}{1}{chapter.1}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\citation{Whitten:1973:4496}
\citation{Dunlap:1977:81}
\citation{Dunlap:1979:3396}
\citation{Dunlap:1979:4993}
\citation{Kendall:1997:158}
\citation{Sherrill:2010:110902}
\citation{Feyereisen:1993:359}
\citation{Weigend:2002:4285}
\citation{ref4}
\citation{ref5}
\citation{ref2}
\citation{ref5}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {2}Utilizing Spatial Sparsity}{6}{chapter.2}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.1}Sparsity Masks}{6}{section.2.1}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces Schwarz sparsity masks used for benzene stacks containing 1, 5, and 10 benzenes spaced 3\text  {\r A} apart. Sparsity masks were obtained by evaluating $(\mu \nu |\mu \nu )<\frac  {\tau ^2}{(\mu \nu |\mu \nu )_{max}}$.\relax }}{8}{figure.caption.4}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:databases}{{2.1}{8}{Schwarz sparsity masks used for benzene stacks containing 1, 5, and 10 benzenes spaced 3\text {\AA } apart. Sparsity masks were obtained by evaluating $(\mu \nu |\mu \nu )<\frac {\tau ^2}{(\mu \nu |\mu \nu )_{max}}$.\relax }{figure.caption.4}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.2}Integral Construction}{8}{section.2.2}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Prune $A_{\mu \nu }^P$ using sparsity\relax }}{8}{algorithm.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.3}Integral Transformation}{9}{section.2.3}}
\citation{Parrish:2017:3185}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces Transform sparse integrals $A_{\mu \nu ^\mu }^P$ to MO spaces.\relax }}{10}{algorithm.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.4}Results}{10}{section.2.4}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {2.1}{\ignorespaces Characteristics of benzene stack systems. $N$ and $N_{aux}$ refer to the number of primary and auxiliary basis functions, respectively. Mask sparsity refers to the percentage of significant AO function pairs in the sparsity mask. Mask sparsity increases with additional benzenes added to the stack.\relax }}{11}{table.caption.5}}
\newlabel{fig:f1}{{2.2a}{12}{Subfigure 2 2.2a}{subfigure.2.2.1}{}}
\newlabel{sub@fig:f1}{{(a)}{a}{Subfigure 2 2.2a\relax }{subfigure.2.2.1}{}}
\newlabel{fig:f1}{{2.2b}{12}{Subfigure 2 2.2b}{subfigure.2.2.2}{}}
\newlabel{sub@fig:f1}{{(b)}{b}{Subfigure 2 2.2b\relax }{subfigure.2.2.2}{}}
\newlabel{fig:f1}{{2.2c}{12}{Subfigure 2 2.2c}{subfigure.2.2.3}{}}
\newlabel{sub@fig:f1}{{(c)}{c}{Subfigure 2 2.2c\relax }{subfigure.2.2.3}{}}
\newlabel{fig:f2}{{2.2d}{12}{Subfigure 2 2.2d}{subfigure.2.2.4}{}}
\newlabel{sub@fig:f2}{{(d)}{d}{Subfigure 2 2.2d\relax }{subfigure.2.2.4}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces Comparison of execution times using sparsity screening (blue) against no sparsity screening (orange). Execution time is plotted against number of benzenes in a benzene stack from one to ten benzenes. Transformations involved computing $(ib|Q)$, where $i$ and $b$ denote occupied and virtual indices, respectively. Cutoff refers to the Schwarz screening threshold. (a) Computing the integrals. (b) Contracting AO integrals with the fitting metric. (c) First transformation times only. (d) Sum of first and second transformation times.\relax }}{12}{figure.caption.6}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {}}}{12}{subfigure.2.1}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {}}}{12}{subfigure.2.2}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(c)}{\ignorespaces {}}}{12}{subfigure.2.3}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(d)}{\ignorespaces {}}}{12}{subfigure.2.4}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {2.2}{\ignorespaces Speedups obtained from sparsity screening at ten benzenes from data in Figure 2.2.\relax }}{12}{table.caption.7}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {3}Optimizing Integral Transformations}{14}{chapter.3}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3.1}A Note on Disk-bound Index Blocking}{14}{section.3.1}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {3.1}{\ignorespaces Total memory required for sparse three-index AO integrals for adenine-thymine dimer across various basis sets. The JK type auxiliary basis sets were used.\relax }}{14}{table.caption.8}}
\citation{ref3}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {3}{\ignorespaces Construct the full AO integrals $B_{\mu \nu }^P$ by blocking across the $P$ index.\relax }}{16}{algorithm.3}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {4}{\ignorespaces Construct the full AO integrals $B_{\mu \nu }^P$ by blocking across the $\mu $ index.\relax }}{16}{algorithm.4}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3.2}Memory Layout for Sparsity-utilized Transformations}{17}{section.3.2}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {5}{\ignorespaces Transforming sparse integrals using $A_{P \mu \nu ^\mu }$ form.\relax }}{18}{algorithm.5}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {6}{\ignorespaces Transforming sparse integrals using $A_{\mu P \nu ^\mu }$ form.\relax }}{18}{algorithm.6}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3.3}Context Dependent Workflows}{19}{section.3.3}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {3.2}{\ignorespaces Speedups obtainable via pre-transforming the 3-center integrals prior to metric contraction for common occupied-virtual transformations. $N_{AO}$ and $N_i$ denote the number of atomic orbitals and occupied molecular orbitals, respectively. \relax }}{20}{table.caption.9}}
\citation{Hohenstein:2015:224103}
\citation{ref6}
\citation{ref7}
\citation{ref4}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {7}{\ignorespaces The "Store" algorithm - contract metric then transform.\relax }}{21}{algorithm.7}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {8}{\ignorespaces The "Direct" algorithm - transform then contract metric.\relax }}{21}{algorithm.8}}
\citation{Parrish:2017:3185}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3.4}Intermediate Recycling}{22}{section.3.4}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3.5}Results}{22}{section.3.5}}
\citation{Lee:2016}
\citation{Lee:2016}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.1}Parallel Scaling of Transformations}{23}{subsection.3.5.1}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces Transition state for organoboron addition to trifluooroacetone. Taken from Ref. \cite {Lee:2016}\relax }}{23}{figure.caption.10}}
\newlabel{fig:databases}{{3.1}{23}{Transition state for organoboron addition to trifluooroacetone. Taken from Ref. \cite {Lee:2016}\relax }{figure.caption.10}{}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {3.3}{\ignorespaces Characteristics of organoboron catalyst. $N_{AO}$ and $N_{aux}$ refer to the number of primary and auxiliary basis functions, respectively. Mask sparsity refers to the percentage of significant AO function pairs in the sparsity mask.\relax }}{23}{table.caption.11}}
\newlabel{fig:f1}{{3.2a}{25}{Subfigure 3 3.2a}{subfigure.3.2.1}{}}
\newlabel{sub@fig:f1}{{(a)}{a}{Subfigure 3 3.2a\relax }{subfigure.3.2.1}{}}
\newlabel{fig:f2}{{3.2b}{25}{Subfigure 3 3.2b}{subfigure.3.2.2}{}}
\newlabel{sub@fig:f2}{{(b)}{b}{Subfigure 3 3.2b\relax }{subfigure.3.2.2}{}}
\newlabel{fig:f1}{{3.2c}{25}{Subfigure 3 3.2c}{subfigure.3.2.3}{}}
\newlabel{sub@fig:f1}{{(c)}{c}{Subfigure 3 3.2c\relax }{subfigure.3.2.3}{}}
\newlabel{fig:f2}{{3.2d}{25}{Subfigure 3 3.2d}{subfigure.3.2.4}{}}
\newlabel{sub@fig:f2}{{(d)}{d}{Subfigure 3 3.2d\relax }{subfigure.3.2.4}{}}
\newlabel{fig:f1}{{3.2e}{25}{Subfigure 3 3.2e}{subfigure.3.2.5}{}}
\newlabel{sub@fig:f1}{{(e)}{e}{Subfigure 3 3.2e\relax }{subfigure.3.2.5}{}}
\newlabel{fig:f2}{{3.2f}{25}{Subfigure 3 3.2f}{subfigure.3.2.6}{}}
\newlabel{sub@fig:f2}{{(f)}{f}{Subfigure 3 3.2f\relax }{subfigure.3.2.6}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces Speedup and execution time plots obtained using our optimized memory layout, $B_{\mu P \nu ^\mu }$, for sparsity screened 3-center integrals. Execution times involve computing three common transformation classes: $(ij|Q)$, $(ib|Q)$, and $(ab|Q)$, where $i,j$ and $a,b$ denote occupied and virtual indices, respectively. Graphs (a), (c), and (e) include speedups for constructing the integrals (orange), transforming (blue), total time (red), and ideal (black). Graphs (b), (d), and (f) plot total execution times. Construction times include both integral computations and metric contractions. Problem sizes were increased by increasing basis set size using cc-pVXZ, X = D,T,Q.\relax }}{25}{figure.caption.12}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {}}}{25}{subfigure.2.1}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {}}}{25}{subfigure.2.2}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(c)}{\ignorespaces {}}}{25}{subfigure.2.3}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(d)}{\ignorespaces {}}}{25}{subfigure.2.4}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(e)}{\ignorespaces {}}}{25}{subfigure.2.5}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(f)}{\ignorespaces {}}}{25}{subfigure.2.6}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.2}Performance Crossover Through Number of Transformations}{26}{subsection.3.5.2}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {3.4}{\ignorespaces Characteristics of organoboron catalyst systems across the cc-pVDZ, cc-pVTZ, and cc-pVQZ basis sets.\relax }}{27}{table.caption.13}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces Comparison of total execution times for the Store and Direct algorithms to complete $(ij|Q)$, $(ib|Q)$, and $(ab|Q)$ transformations across the cc-pVDZ, cc-pVTZ, and cc-pVQZ basis sets. A scan from one to ten transformations was performed. In each case, a crossover occurs as the Direct algorithm becomes more expensive. The crossover occurs in fewer iterations for transformations involving larger MO spaces. With increasing basis set size, the crossover point is shifted to the right for the $(ij|Q)$ and $(ib|Q)$ transformations and it is shifted slightly to the left for the $(ab|Q)$ transformation.\relax }}{27}{figure.caption.14}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {}}}{27}{subfigure.3.1}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {}}}{27}{subfigure.3.2}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(c)}{\ignorespaces {}}}{27}{subfigure.3.3}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(d)}{\ignorespaces {}}}{27}{subfigure.3.4}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(e)}{\ignorespaces {}}}{27}{subfigure.3.5}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(f)}{\ignorespaces {}}}{27}{subfigure.3.6}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(g)}{\ignorespaces {}}}{27}{subfigure.3.7}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(h)}{\ignorespaces {}}}{27}{subfigure.3.8}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(i)}{\ignorespaces {}}}{27}{subfigure.3.9}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.3}Superior Workflows in Practice}{28}{subsection.3.5.3}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces Systems used for context dependent investigation of the Store and Direct workflows. (a) Hexatriene. (b) Benzene and toluene in 20 water solvent molecules. \relax }}{29}{figure.caption.15}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {}}}{29}{subfigure.4.1}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {}}}{29}{subfigure.4.2}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {3.5}{\ignorespaces Characteristics of systems for Store vs Direct algorithm comparisons.\relax }}{29}{table.caption.16}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {3.6}{\ignorespaces Computational times comparing the Direct and Store algorithms for three-index integral construction and transformations.\relax }}{30}{table.caption.17}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {3.7}{\ignorespaces Total procedure wall clock times comparing the Direct and Store algorithms.\relax }}{30}{table.caption.18}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {4}Evaluating Coulomb and Exchange Matrices}{31}{chapter.4}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {4.1}Coulomb and Exchange Evaluations}{31}{section.4.1}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {9}{\ignorespaces Building the $K$ matrix.\relax }}{32}{algorithm.9}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {10}{\ignorespaces Building the $K$ matrix using $B_{\mu P \nu ^\mu }$, blocking across $P$\relax }}{33}{algorithm.10}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {11}{\ignorespaces Building the $K$ matrix using $B_{P \mu \nu ^\mu }$, blocking across $P$\relax }}{34}{algorithm.11}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {12}{\ignorespaces Building the $J$ matrix.\relax }}{35}{algorithm.12}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {13}{\ignorespaces Building the $J$ matrix using $B_{\mu P \nu ^\mu }$, blocking across $P$\relax }}{36}{algorithm.13}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {14}{\ignorespaces Building the $J$ matrix using $B_{P \mu \nu ^\mu }$, blocking across $P$\relax }}{36}{algorithm.14}}
\citation{Parrish:2017:3185}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {15}{\ignorespaces Coulomb and exchange matrix evaluation kernel.\relax }}{37}{algorithm.15}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {4.2}Results}{37}{section.4.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.1}Multi-core Results}{38}{subsection.4.2.1}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {4.1}{\ignorespaces Total execution times for Self-Consistent Field procedures for various systems using Algorithms 10 and 11 and Algorithms 13 and 14 for exchange and Coulomb matrix evaluations, respectively. Total wall times include wall time for the entire program to execute. J and K compute time indicates the total time spent in the Coulomb and exchange matrix evaluation kernels, respectively. System descriptions including number of AO basis functions, $N_{AO}$, number of auxiliary basis functions, $N_{aux}$, basis, and number of atoms, $N_{at.}$, are included. All rows are sorted by the product $N_{aux}N_{AO}$. A speedup column is included for total wall time and is calculated as the total procedure time spent using Algorithms 11 and 14 dived by the total procedure time spent using Algorithms 10 and 13. The experiments were carried out using one node consisting of an Intel Core i7-5930K processor (6 cores at 3.50GHz) and 64GB DRAM \relax }}{39}{table.caption.19}}
\newlabel{tbl:practical_speedups}{{4.1}{39}{Total execution times for Self-Consistent Field procedures for various systems using Algorithms 10 and 11 and Algorithms 13 and 14 for exchange and Coulomb matrix evaluations, respectively. Total wall times include wall time for the entire program to execute. J and K compute time indicates the total time spent in the Coulomb and exchange matrix evaluation kernels, respectively. System descriptions including number of AO basis functions, $N_{AO}$, number of auxiliary basis functions, $N_{aux}$, basis, and number of atoms, $N_{at.}$, are included. All rows are sorted by the product $N_{aux}N_{AO}$. A speedup column is included for total wall time and is calculated as the total procedure time spent using Algorithms 11 and 14 dived by the total procedure time spent using Algorithms 10 and 13. The experiments were carried out using one node consisting of an Intel Core i7-5930K processor (6 cores at 3.50GHz) and 64GB DRAM \relax }{table.caption.19}{}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {4.2}{\ignorespaces Total execution times for Self-Consistent Field procedures for various systems using Algorithms 10 and 11 and Algorithms 13 and 14 for exchange and Coulomb matrix evaluations, respectively. Total wall times include wall time for the entire program to execute. J and K compute time indicates the total time spent in the Coulomb and exchange matrix evaluation kernels, respectively. System descriptions including number of AO basis functions, $N_{AO}$, number of auxiliary basis functions, $N_{aux}$, basis, and number of atoms, $N_{at.}$, are included. All rows are sorted by the product $N_{aux}N_{AO}$. A speedup column is included for total wall time and is calculated as the total procedure time spent using Algorithms 11 and 14 dived by the total procedure time spent using Algorithms 10 and 13. The experiments were carried out using one node consisting of two Intel Xeon E5-2640 processors (10 cores at 2.40GHz) and 256GB DRAM. \relax }}{40}{table.caption.20}}
\newlabel{tbl:practical_speedups}{{4.2}{40}{Total execution times for Self-Consistent Field procedures for various systems using Algorithms 10 and 11 and Algorithms 13 and 14 for exchange and Coulomb matrix evaluations, respectively. Total wall times include wall time for the entire program to execute. J and K compute time indicates the total time spent in the Coulomb and exchange matrix evaluation kernels, respectively. System descriptions including number of AO basis functions, $N_{AO}$, number of auxiliary basis functions, $N_{aux}$, basis, and number of atoms, $N_{at.}$, are included. All rows are sorted by the product $N_{aux}N_{AO}$. A speedup column is included for total wall time and is calculated as the total procedure time spent using Algorithms 11 and 14 dived by the total procedure time spent using Algorithms 10 and 13. The experiments were carried out using one node consisting of two Intel Xeon E5-2640 processors (10 cores at 2.40GHz) and 256GB DRAM. \relax }{table.caption.20}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.2}Manycore Results}{42}{subsection.4.2.2}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {4.3}{\ignorespaces Total procedure execution times for a Self-Consistent Field procedure using both Algorithms 10 and 13 and Algorithms 11 and 14 for exchange and Coloumb matrix evaluations, respectively. The programs were executed on one Knights Landing processor using a development version of {\sc  Psi4}. A relative speedup is listed.\relax }}{42}{table.caption.21}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {4.4}{\ignorespaces Total exchange matrix evaluation times within an Self-Consistent Field procedure using both Algorithms 10 and 11. The programs were executed on one Knights Landing processor using a development version of {\sc  Psi4}. A relative speedup is listed.\relax }}{43}{table.caption.22}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {5}Conclusions}{44}{chapter.5}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{References}{46}{chapter*.23}}
